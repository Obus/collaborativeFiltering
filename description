Тестов в программе нет.
Вместо этого я сгенерировал тестовый набор данных, где рейтинг товаров (101 штука) распределен (усеченное гамма распределение) между 0 и 10.

Как вы и предложили, сделал консольную утилиту, которая работает с этим самым файлом.
Решать она может две задачи:

1.Collaborative filtering:

-t cf - говорит, что решаем именно задачу collaborative filtering ("прогноза" оценки товара пользователем)

-u Id - Id пользователя (лучше от 1 до 1000)

-i Id - Id товара (лучше от 1 до 100)

-a x - aggregator:
	x == 1 (усредненные рейтинги остальных пользователей)
	x == 2 (взвешенная сумма рейтингов, вес - схожесть пользователей)
	x == 3 (взвешенная центрированная сумма рейтингов, вес - схожесть пользователей, центрированние - на средний ретйнг пользователя)
	if x == 2 or x == 3 -> необходимо
		-s x - similarity, оценка схожести:
			x == 1 - корреляция Пирсона (между пересечением оценок пользователей)
			x == 2 - косинусовое расстояние 

То есть, со следующими аргументами
	java main -u 341 -i 27 -a 3 -s 1 ,
мы полчим прогноз рейтинга товара 27, который бы поставил пользователь 341, как результат memory based collaborative filtering, где aggr определяется как взвешенная центрированная сумма рейтингов, вес - схожесть пользователей (similarity), центрированние - на средний ретйнг пользователя, а similarity как корреляция Пирсона


2.Least desired filtering:

-t ld - говорит, что решаем именно задачу least desired (поиска наименее желаемых товаров)

-u Id - Id пользователя (лучше от 1 до 1000)

-a x - aggregator:
	x == 1 (усредненные рейтинги остальных пользователей)
	x == 2 (взвешенная сумма рейтингов, вес - схожесть пользователей)
	x == 3 (взвешенная центрированная сумма рейтингов, вес - схожесть пользователей, центрированние - на средний ретйнг пользователя)
	if x == 2 or x == 3 -> необходимо
		-s x - similarity, оценка схожести:
			x == 1 - корреляция Пирсона (между пересечением оценок пользователей)
			x == 2 - косинусовое расстояние 

То есть, со следующими аргументами
	java main -u 341 -a 3 -s 1 -m 3.0,
мы полчим список магазинов, чей предполагаемый рейтинг пользователя 341 меньше 3.0, полученный с помощью memory based collaborative filtering, где aggr определяется как взвешенная центрированная сумма рейтингов, вес - схожесть пользователей (similarity), центрированние - на средний ретйнг пользователя, а similarity как корреляция Пирсона.

